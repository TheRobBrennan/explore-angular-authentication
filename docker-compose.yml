version: '3'

services:
  'angular-auth-mean-secure':
    build:
      context: ./src/mean-secure
      dockerfile: ./Dockerfile
    container_name: 'angular-auth-mean-secure'
    ports:
      - "3000:3000"
    volumes:
      - ./src/mean-secure:/usr/src
    depends_on:
      - mongodb

  # 'angular-auth-app':
  #   build:
  #     context: ./src/app
  #     dockerfile: ./Dockerfile
  #   container_name: 'angular-auth-app'
  #   command: ./node_modules/.bin/nodemon -e js,json
  #   ports:
  #     - "3000:3000"
  #   # Automatically hot reload code changes in the Docker container
  #   volumes:
  #     - ./src/app:/usr/src
  #   depends_on:
  #     - angular-auth-server

  # 'angular-auth-server':
  #   build:
  #     context: ./src/server
  #     dockerfile: ./Dockerfile
  #   container_name: 'angular-auth-server'
  #   # This service will not start until either the mongodb service is available OR thirty seconds have elapsed
  #   command: sh -c './scripts/wait-for.sh --timeout=30 mongodb:27017 && ./node_modules/.bin/nodemon -e js,json'
  #   ports:
  #     - "3001:3001"
  #   # Automatically hot reload code changes in the Docker container
  #   volumes:
  #     - ./src/server:/usr/src
  #   depends_on:
  #     - mongodb

  mongodb:
    image: mongo
    container_name: "angular-auth-mongodb"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    # If you want to persist MongoDB data after a container has been stopped/deleted, uncomment the volumes section
    # volumes:
    #   - ./src/server/.docker/mongodb/data/db:/data/db
    ports:
      - "27017:27017"
